class inherited ТББ_Базовый.Базовые.БазовыйБланк "Конвертер из ТБ 6.9";

inclass

inobject
  var ЗагружаемоеУчреждение     : string;
  var ИНН                       : string;
  var ЗагруженноеУчреждение     : Базовый.Данные.Субъект;

  --Этапы загрузки
  --Общие справочники для всех учреждений, вкл.объединяемые
  var этап_Календари            : logical;      var этап_КалендариНадпись       : string = 'Производственные календари (типы)';
  var этап_КБК                  : logical;      var этап_КбкНадпись             : string = 'Рабочие КБК';
  --Справочники импортируемого учреждения
  var этап_Учреждние            : logical;
  var этап_Бюджеты              : logical;
  var этап_Звания               : logical;      var этап_ЗванияНадпись          : string = 'Воинские и спец.звания';
  var этап_ВЗвСтавки            : logical;      var этап_ВЗвСтавкиНадпись       : string = 'Ставки воинских званий';
  var этап_СЗвСтавки            : logical;      var этап_СЗвСтавкиНадпись       : string = 'Ставки спец.званий';
  var этап_Должности            : logical;      var этап_ДолжностиНадпись       : string = 'Должности';
  var этап_Квалификации         : logical;      var этап_КвалификацииНадпись    : string = 'Квалификации';
  var этап_КвалСтавки           : logical;      var этап_КвалСтавкиНадпись      : string = 'Ставки надбавок за квалификацию';

  var секцИмпортНачислений      : TemplateSection;
  var КодИфОпераций             : string[];
  var НаимИфОпераций            : string[];
  var этап_ИмпортНач            : logical[];

  var этап_ФизЛица              : logical;
  var этап_Сотрудники           : logical;



--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc ПроверкаВыполнения;
    var локмИстФин      : string[2];
    var k               : integer;
    --общие
    этап_Календари      = Конвертация.Календари.ЗагруженоВсе;
    --частные
    этап_Учреждние      = Конвертация.НашеУчреждение.Загружено(ИНН);
    этап_КБК            = Конвертация.КБК.ЗагруженоВсе;
    этап_Бюджеты        = Конвертация.Бюджеты.ЗагруженоВсе(ЗагруженноеУчреждение);
    этап_Звания         = Конвертация.Звания.ЗагруженоВсе;
    этап_ВЗвСтавки      = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольВоинскЗвание);
    этап_СЗвСтавки      = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольСпецЗвание);
    этап_Должности      = Конвертация.Должности.ЗагруженоВсе;
    этап_Квалификации   = Конвертация.Квалификации.ЗагруженоВсе;
    этап_КвалСтавки     = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольКвалификация);
    локмИстФин          = Библио.ИсточникиФинансированияИСФ;
    --формирование таблицы ИФ для начислений
    секцИмпортНачислений.Count          = LengthOfArray(локмИстФин);
    for k = 1..LengthOfArray(локмИстФин) do
      КодИфОпераций[k]          = локмИстФин[k,1];
      НаимИфОпераций[k]         = локмИстФин[k,2];
      этап_ИмпортНач[k]         = Конвертация.ВидыНачислений.ЗагруженоВсе(ЗагруженноеУчреждение,КодИфОпераций[k]);
    end;
    --субъекты
    этап_Физлица        = Конвертация.Физлица.ЗагруженоВсе;
    этап_Сотрудники     = Конвертация.Сотрудники.ЗагруженоВсе;
  end;--proc ПроверкаВыполнения

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc кнВыполнениеПриНажатии(Sender :Button);
    var k               : integer;
    var locForm         : BlankForm;
    этап_Учреждние      = false;
    этап_КБК            = false;
    этап_Бюджеты        = false;
    этап_Звания         = false;
    этап_ВЗвСтавки      = false;
    этап_СЗвСтавки      = false;
    этап_Должности      = false;
    этап_Квалификации   = false;
    этап_КвалСтавки     = false;
    этап_ИмпортНач      = nil;
    этап_ФизЛица        = false;
    этап_Сотрудники     = false;
    Template.Update;
    --общие
    if not этап_Календари then
      locForm                   = Сервис.Импорт_Званий.Create;
      locForm.ShowEx(,Window.ModalWindow);
      этап_Звания               = Конвертация.Звания.ЗагруженоВсе;
      Template.Update;
    end;
    этап_КБК                    = (CmOk=Конвертация.КБК.Выполнение);                            Template.Update;
    --основа
    этап_Учреждние              = (CmOk=Конвертация.НашеУчреждение.Выполнение);                 Template.Update;
    этап_Бюджеты                = (CmOk=Конвертация.Бюджеты.Выполнение(ЗагруженноеУчреждение)); Template.Update;
    --справочники званий и ставок
    if not этап_Звания then
      locForm                   = Сервис.Импорт_Званий.Create;
      locForm.ShowEx(,Window.ModalWindow);
      этап_Звания               = Конвертация.Звания.ЗагруженоВсе;
      Template.Update;
    end;
    шаблон_ПриОткрытии(true);
    if этап_Звания and not этап_ВЗвСтавки then
      Конвертация.СтавкиРолей.Выполнение(ТББ_Базовый.КонстантыРолей.рольВоинскЗвание);
      этап_ВЗвСтавки            = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольВоинскЗвание);
      Template.Update;
    end;
    if этап_Звания and not этап_СЗвСтавки then
      Конвертация.СтавкиРолей.Выполнение(ТББ_Базовый.КонстантыРолей.рольСпецЗвание);
      этап_СЗвСтавки            = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольСпецЗвание);
      Template.Update;
    end;
    --справочник должностей
    if not этап_Должности then
      locForm                   = Сервис.Импорт_Должностей.Create;
      locForm.ShowEx(,Window.ModalWindow);
      этап_Должности            = Конвертация.Должности.ЗагруженоВсе;
      Template.Update;
    end;
    --справочники квалификаций и ставок
    if not этап_Квалификации then
      locForm                   = Сервис.Импорт_Квалификаций.Create;
      locForm.ShowEx(,Window.ModalWindow);
      этап_Квалификации         = Конвертация.Квалификации.ЗагруженоВсе;
      Template.Update;
    end;
    if этап_Квалификации and not этап_КвалСтавки then
      Конвертация.СтавкиРолей.Выполнение(ТББ_Базовый.КонстантыРолей.рольКвалификация);
      этап_КвалСтавки           = Конвертация.СтавкиРолей.Загружено(ТББ_Базовый.КонстантыРолей.рольКвалификация);
      Template.Update;
    end;
    --библиотека видов начислений
    for k = 1..секцИмпортНачислений.Count do
      if not этап_ИмпортНач[k] then
        locForm                         = Сервис.Импорт_ВидовНачислений.Create;
        locForm.ЗагруженноеУчреждение   = ЗагруженноеУчреждение;
        locForm.КодИстФинИсф            = КодИфОпераций[k];
        locForm.ShowEx(,Window.ModalWindow);
        Template.Update;
      end;
    end;
    шаблон_ПриОткрытии(true);
    --субъекты
    Конвертация.Физлица.Выполнение;
    этап_Физлица                = Конвертация.Физлица.ЗагруженоВсе; 
    Template.Update;
    Конвертация.Сотрудники.Выполнение;
    этап_Сотрудники             = Конвертация.Сотрудники.ЗагруженоВсе;
    Template.Update;
  end;--proc кнВыполнениеПриНажатии

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc шаблон_ПриОткрытии(Create :Logical);
    var locClassRecord  : Class Record;
    inherited шаблон_ПриОткрытии(Create);
    locClassRecord              = FindClass('ТБ69.ISF_НАСТРОЙКИ') as Class Record;
    if locClassRecord=nil then
      ЗагружаемоеУчреждение     = 'НЕ ОПРЕДЕЛЕНО!!!';
      ИНН                       = nil;
      ЗагруженноеУчреждение     = nil;
    else
      with Query.Create([locClassRecord]) do
        Filter                  = 'ИНН<>nil';
        Select;
        if (Bof and Eof) then
          ЗагружаемоеУчреждение = 'НЕ ОПРЕДЕЛЕНО!!!';
          ИНН                   = nil;
        else
          Last;
          ЗагружаемоеУчреждение = Current.Наим as string;
          ИНН                   = Current.ИНН as string;
        end;
      end;--with Query
      if   ЗагружаемоеУчреждение<>'НЕ ОПРЕДЕЛЕНО!!!' and ИНН<>nil then
        Конвертация.НашеУчреждение.Загружено(ИНН,ЗагруженноеУчреждение);
      end;
    end;
    Переменные.ЗагружаемоеУчреждение    = ЗагружаемоеУчреждение;
    Переменные.ИНН                      = ИНН;
    Переменные.ЗагруженноеУчреждение    = ЗагруженноеУчреждение;
    ПроверкаВыполнения;
  end;--proc шаблон_ПриОткрытии

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func Поле_ПриВыводе(Cell :TemplateCell; Value :Variant;Action :Template.OutputTypes; var Format :String) :Variant;
    if Value=true then
      Result    = 'ь';
    else
      Result    = 'ё';
    end;
  end;

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc Поле_ПриРисовании(Cell :TemplateCell; Selected :Logical; var Color :Integer;var FieldColor :Integer; Font :Font);
    Font.Name   = 'Wingdings';
    if    Cell.Value=true then
      Font.Color        = СИС2.Константы.clGreen;
    elsif Cell.Value=false then
      Font.Color        = СИС2.Константы.clGray;
    end;
  end;

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func Поле_ПриНажатии(Cell :TemplateCell; Action :Template.ClickTypes) :Logical;
    var locBlankForm    : BlankForm;
    --var locCardForm     : CardForm;
    var Index           : integer;
    var locRecord       : Record;
    proc ПоказатьТаблицуСтавок(локКонстантаРоли:integer);
      with Query.Create([Гарнец_ПерсоналБазовый.Справочники.СтавкиРолей]) do
        Filter                                = 'isGroup=-1 and ТипРоли='+Str(локКонстантаРоли);
        Select;
        if not (Bof and Eof) then
          locRecord                           = Current as record;
          locBlankForm                        = Гарнец_ПерсоналБазовый.Справочники.редСтавкиРолей.Create;
          locBlankForm.ShowEx(locRecord,Window.ModalWindow);
        else
          Message('Таблица ставок не создана!');
        end;
        Close;
      end;
    end;--proc ПоказатьТаблицуСтавок
    --.........................................................................
    if Action=Template.ButtonPressed  then
      if    Cell.Contents='этап_КалендариНадпись' then
        locBlankForm                            = Сервис.Импорт_Календарей.Create;
        locBlankForm.ShowEx(,Window.ModalWindow);
        этап_Календари                          = Конвертация.Календари.ЗагруженоВсе;
        Template.Update;
      elsif Cell.Contents='этап_КбкНадпись' then
        locBlankForm                            = Сервис.Импорт_РабочихКбк.Create;
        locBlankForm.ShowEx(,Window.ModalWindow);
        этап_КБК                                = Конвертация.КБК.ЗагруженоВсе;
        Template.Update;
      elsif Cell.Owner=секцИмпортНачислений then
        Index                                   = Cell.Frame as integer;
        locBlankForm                            = Сервис.Импорт_ВидовНачислений.Create;
        locBlankForm.КодИстФинИсф               = КодИфОпераций[Index];
        locBlankForm.ЗагруженноеУчреждение      = ЗагруженноеУчреждение;
        locBlankForm.ShowEx(,Window.ModalWindow);        --locForm.ShowEx(,Window.PopupWindow);
        этап_ИмпортНач[Index]                   = Конвертация.ВидыНачислений.ЗагруженоВсе(ЗагруженноеУчреждение,КодИфОпераций[Index]);
      elsif Cell.Contents='этап_ЗванияНадпись' then
        locBlankForm                            = Сервис.Импорт_Званий.Create;
        locBlankForm.ShowEx(,Window.ModalWindow);
        этап_Звания                             = Конвертация.Звания.ЗагруженоВсе;
        Template.Update;
      elsif Cell.Contents='этап_ВЗвСтавкиНадпись' then
        ПоказатьТаблицуСтавок(ТББ_Базовый.КонстантыРолей.рольВоинскЗвание);
      elsif Cell.Contents='этап_СЗвСтавкиНадпись' then
        ПоказатьТаблицуСтавок(ТББ_Базовый.КонстантыРолей.рольСпецЗвание);
      elsif Cell.Contents='этап_ДолжностиНадпись' then
        locBlankForm                            = Сервис.Импорт_Должностей.Create;
        locBlankForm.ShowEx(,Window.ModalWindow);
        этап_Должности                          = Конвертация.Должности.ЗагруженоВсе;
        Template.Update;
      elsif Cell.Contents='этап_КвалификацииНадпись' then
        locBlankForm                            = Сервис.Импорт_Квалификаций.Create;
        locBlankForm.ShowEx(,Window.ModalWindow);
        этап_Квалификации                       = Конвертация.Квалификации.ЗагруженоВсе;
        Template.Update;
      elsif Cell.Contents='этап_КвалСтавкиНадпись' then
        ПоказатьТаблицуСтавок(ТББ_Базовый.КонстантыРолей.рольКвалификация);
      end;
    end;
  end;

end