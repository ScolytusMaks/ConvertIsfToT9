class "";

inclass


--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  --@doc Проверка выполнения импорта для данной операции, одновременно - вычисление параметров выполненного импорта
  func ИмпортОперацииВыполнен(локНашеУчреждение:Базовый.Данные.Субъект;локВидОперацииИСФ:record;var локВидОперации:Бюджет_ЗПиДД.Справочники.ВидыУдержаний=nil;var локОснова:logical=false):logical;
    var locCodeIsf      : string;
    if локВидОперацииИСФ<>nil then
      locCodeIsf        = локВидОперацииИСФ.GetField('КОД') as string;
      with Query.Create([Бюджет_ЗПиДД.Справочники.ВидыУдержаний]) do
        Filter          = 'НашеУчреждение='+Str(локНашеУчреждение)+' and RefISF.Exists(CodeISF="'+locCodeIsf+'")';
        Select;
        if not (Bof and Eof) then
          локВидОперации= Current as Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
          Result        = true;
        else
          локВидОперации= nil;
        end;
        Close;
        if Result then
          Filter        = 'НашеУчреждение='+Str(локНашеУчреждение)+' and RefISF.Exists(CodeISF="'+locCodeIsf+'" and MainForUnion)';
          Select;
          локОснова     = not (Bof and Eof);
          Close;
        else
          локОснова     = false;
        end;
      end;--with Query
    end;
  end;--func ИмпортОперацииВыполнен

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func ЗагруженоВсе(локНашеУчреждение : Базовый.Данные.Субъект;КодИстФинИсф : string):logical;
    Result              = true;
    with Query.Create([ТБ69.ISF_ВИДЫ_УД]) do
      Filter            = 'ИСТФИН="'+КодИстФинИсф+'" and not (КАТЕГОРИЯ in [1,5])';
      Select;
      while not Eof do
        if not ИмпортОперацииВыполнен(локНашеУчреждение,Current) then
          Result        = false;
          Break;
        end;
        Next;
      end;--while not Eof
    end;--with Query
  end;--func ЗагруженоВсе
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func ИмпортНдфлВыполнен:logical;
    Result              = true;
    with Query.Create([ТБ69.ISF_ВИДЫ_УД]) do
      Filter            = 'КАТЕГОРИЯ = 1';
      Select;
      while not Eof do
        if not ИмпортОперацииВыполнен(Переменные.ЗагруженноеУчреждение,Current) then
          Result        = false;
          Break;
        end;
        Next;
      end;--while not Eof
    end;--with Query
  end;--proc ИмпортНдфлВыполнен
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func ИмпортНдфлНеВыполнялся(var локВидОперации  : Бюджет_ЗПиДД.Справочники.ВидыУдержаний=nil):logical;
    with Query.Create([Бюджет_ЗПиДД.Справочники.ВидыУдержаний]) do
      Filter            = 'НашеУчреждение='+Str(Переменные.ЗагруженноеУчреждение)+' and ТипРасчета.Код="5110"';
      Select;
      Result            = (Bof and Eof);
      if not Result then
        локВидОперации  = Current as Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
      end;
    end;
  end;--proc ИмпортНдфлНеВыполнялся
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc ИмпортНдфл;
    var локВидОперации  : Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
    if ИмпортНдфлНеВыполнялся(локВидОперации) then
      локВидОперации                        = Бюджет_ЗПиДД.Библио.СоздатьОперациюПоТипу('5110',Переменные.ЗагруженноеУчреждение,false) as Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
    end;
    with Query.Create([ТБ69.ISF_ВИДЫ_УД]) do
      Filter            = 'КАТЕГОРИЯ = 1';
      Select;
      while not Eof do
        if not ИмпортОперацииВыполнен(Переменные.ЗагруженноеУчреждение,Current) then
          локВидОперации.RefISF.AddEx.CodeISF   = Current.Код as string;
          СИС2.ФункцииДокумента.RecordPostIfNeed(локВидОперации);
        end;
        Next;
      end;--while not Eof
    end;--with Query
  end;--proc ИмпортОперацииНдфл
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func ИмпортБезНалВыполнен:logical;
    Result              = true;
    with Query.Create([ТБ69.ISF_ВИДЫ_УД]) do
      Filter            = 'КАТЕГОРИЯ = 5';
      Select;
      while not Eof do
        if not ИмпортОперацииВыполнен(Переменные.ЗагруженноеУчреждение,Current) then
          Result        = false;
          Break;
        end;
        Next;
      end;--while not Eof
    end;--with Query
  end;--proc ИмпортБезНалВыполнен
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func ИмпортБезНалНеВыполнялся(var локВидОперации  : Бюджет_ЗПиДД.Справочники.ВидыУдержаний=nil):logical;
    with Query.Create([Бюджет_ЗПиДД.Справочники.ВидыУдержаний]) do
      Filter            = 'НашеУчреждение='+Str(Переменные.ЗагруженноеУчреждение)+' and ТипРасчета.Код="5905"';
      Select;
      Result            = (Bof and Eof);
      if not Result then
        локВидОперации  = Current as Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
      end;
    end;
  end;--proc ИмпортБезНалНеВыполнялся
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  proc ИмпортБезНал;
    var локВидОперации  : Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
    if ИмпортБезНалНеВыполнялся(локВидОперации) then
      локВидОперации                        = Бюджет_ЗПиДД.Библио.СоздатьОперациюПоТипу('5905',Переменные.ЗагруженноеУчреждение,false) as Бюджет_ЗПиДД.Справочники.ВидыУдержаний;
      локВидОперации.НеИспользуется         = true;
      СИС2.ФункцииДокумента.RecordPostIfNeed(локВидОперации);
    end;
    with Query.Create([ТБ69.ISF_ВИДЫ_УД]) do
      Filter            = 'КАТЕГОРИЯ = 5';
      Select;
      while not Eof do
        if not ИмпортОперацииВыполнен(Переменные.ЗагруженноеУчреждение,Current) then
          локВидОперации.RefISF.AddEx.CodeISF   = Current.Код as string;
          СИС2.ФункцииДокумента.RecordPostIfNeed(локВидОперации);
        end;
        Next;
      end;--while not Eof
    end;--with Query
  end;--proc ИмпортОперацииБезНал
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--

inobject


end