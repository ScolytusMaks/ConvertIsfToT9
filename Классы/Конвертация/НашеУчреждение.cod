class "";

inclass
--  Класс_Т6      : string                ='ТБ69.ISF_НАСТРОЙКИ';
--  Класс_Т9      : Class Record          = Базовый.Данные.Субъект;


--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func Загружено(locINN:string;var locRecord:Базовый.Данные.Субъект=nil):logical;
    with Query.Create([Базовый.Данные.Субъект]) do
      Filter          = 'ИНН="'+locINN+'"';
      Select;
      if not (Bof and Eof) then
        locRecord     = Current as Базовый.Данные.Субъект;
        Result        = true;
      end;
    end;--with Query
  end;--func Загружено

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--
  func Выполнение:integer;
    var locClassRecord  : Class Record;
    var newRecord       : Базовый.Данные.Субъект;
    locClassRecord              = FindClass('ТБ69.ISF_НАСТРОЙКИ') as Class Record;
    if locClassRecord=nil then
      Message('Класс ISF_НАСТРОЙКИ не найден.');
    else
      with Query.Create([locClassRecord]) do
        Filter          = 'ИНН<>nil';
        Select;
        if not (Bof and Eof) then
          Last;
          if not Загружено(Current.ИНН as string,newRecord)  then
            newRecord                   = Базовый.Данные.Субъект.Create;
          end;
          newRecord.Наше                = true;
          newRecord.Учреждение          = true;
          newRecord.Контрагент          = true;
          newRecord.Код                 = ТББ_Базовый.Нумератор.НовыйКод(newRecord);
          newRecord.Имя                 = Current.Наим as string;
          newRecord.Наим                = Current.Наим as string;
          newRecord.ПолнИмя             = Current.Наим as string;
          newRecord.АльтИмя             = Current.Наим as string;
          newRecord.ИмяДляПфр           = Current.Наим as string;
--          newRecord.Адрес               = Current.;
--          newRecord.АдресПочтовый       = Current.;
--          newRecord.АдресФактический    = Current.;
--          newRecord.ЮрАдрес             = Current.;
          newRecord.Телефон             = Current.Телефон as string;
          newRecord.РегНомер            = Current.РЕГПФ as string;
          newRecord.ИНН                 = Current.ИНН as string;
          newRecord.РегНомерФсс         = Current.СОЦКОД as string;
          newRecord.КодПодчиненности    = Current.СОЦКОДП as string;
          newRecord.КодПричины          = Current.КПП as string;
          newRecord.КодГНИ              = Current.КодГНИ as string;
          newRecord.НаименованиеГни     = Current.ГНИ as string;
          newRecord.ОКПО                = Current.ОКПО as string;
          newRecord.ОКАТО               = Current.ОКАТО as string;
          newRecord.ОКВЭД               = Current.ОКВЭД as string;
          newRecord.ОГРН                = Current.ОГРН as string;
          СИС2.ФункцииДокумента.RecordPostIfNeed(newRecord);
          Result                        = cmOk;
        else
          Message('В картотеке ISF_НАСТРОЙКИ не заполнено поле ИНН. Пожалуйста, исправьте!');
        end;
      end;--with Query
    end;
  end;--func Выполнение
--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--

inobject

end